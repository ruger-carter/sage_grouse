[["index.html", "Greater Sage-grouse and Wildfire Chapter 1 Creating the Sage-grouse Fire Database 1.1 Database Diagram 1.2 Creating the database 1.3 Creating the sage-grouse fire plot data 1.4 Pellet Count Data 1.5 Dog Plot Data 1.6 Combining pellet count data with plot data 1.7 Combining dog transect data with plot data.", " Greater Sage-grouse and Wildfire Ruger Carter 2023-05-01 Chapter 1 Creating the Sage-grouse Fire Database 1.1 Database Diagram This is a diagram of my data. Primary keys are italicized. Foreign keys are shown in bold. sg_fire_plots table contains the data for individual plots. The pellet_count_raw table includes data recorded during pellet count surveys. The dog_transect_raw table includes data recorded during pointing dog surveys. knitr::include_graphics(&quot;database_design.png&quot;) Figure 1.1: Database Diagram 1.2 Creating the database This is the code I used to create the database. We’ll start with loading the DBI and RSQLite Packages. library(DBI) library(RSQLite) First, we’re going to start by establishing a connection to a SQLite database. sg_db &lt;- dbConnect(RSQLite::SQLite(), &quot;../sg.db&quot;) 1.3 Creating the sage-grouse fire plot data This table includes all plot data that we sampled using pointing dogs and pellet counts. dbExecute(sg_db, &quot;CREATE TABLE sg_fire_plots ( global_id, plot_id varchar(5) NOT NULL, state varchar(2) CHECK (state IN (&#39;Idaho&#39;, &#39;Utah&#39;)), date, type char (1) CHECK (type IN (&#39;B&#39;,&#39;R&#39;)), elevation char (4), fire_year char (4), surveyor, PRIMARY KEY (plot_id) );&quot;) #bring in csv of plot data sg_fire_plots &lt;- read.csv(&quot;../Data/raw_data/sg_fire_plots.csv&quot;) names(sg_fire_plots) #Enter data from CSV into table dbWriteTable(sg_db, &quot;sg_fire_plots&quot;, sg_fire_plots, append = TRUE) This is what the content of the table looks like: #check data dbGetQuery(sg_db, &quot;SELECT * FROM sg_fire_plots LIMIT 10;&quot;) ## global_id plot_id state date type ## 1 f8c4c2e7-0943-4cea-a943-90f858db695a IDB1 Idaho 9/6/2022 15:49 B ## 2 9161b0ae-60b1-44e1-af24-52ae23a6ad3a IDC1 Idaho 9/7/2022 16:56 R ## 3 7b0bc762-0d47-403f-8b90-359ba21a6b51 IDB2 Idaho 9/6/2022 14:56 B ## 4 54cb649e-5254-4ec4-9858-5817a66b5af5 IDC2 Idaho 9/7/2022 16:56 R ## 5 08359285-da58-402c-8c83-6cad69cdb2c3 IDB3 Idaho 9/6/2022 14:58 B ## 6 78e4bf48-5004-44c4-ac85-a687f62decbc IDC3 Idaho 9/7/2022 16:55 R ## 7 1ecb8c44-3e56-4434-bac1-f42f33f6c9e2 IDB4 Idaho 9/21/2022 19:19 B ## 8 5cc1a76e-4c04-4a00-a3c6-b9b88bf69120 IDB5 Idaho 9/21/2022 19:19 B ## 9 5f52bc01-463b-4b1e-814d-e12c3362c911 IDB6 Idaho 9/21/2022 19:19 B ## 10 4b02d159-ae20-4bc8-9e82-21bb905ec574 IDB7 Idaho 10/5/2022 21:08 B ## elevation fire_year surveyor ## 1 6200 2010 Austin Heitzman ## 2 6200 &lt;NA&gt; Austin Heitzman ## 3 5900 1999 Austin Heitzman ## 4 5900 &lt;NA&gt; Austin Heitzman ## 5 6000 1999 Austin Heitzman ## 6 6000 &lt;NA&gt; Austin Heitzman ## 7 5700 1999 Austin Heitzman ## 8 6200 1999 Austin Heitzman ## 9 5600 1999 Austin Heitzman ## 10 6300 1981 Austin Heitzman 1.4 Pellet Count Data This table includes all the pellet count data collected on the plots. #Create table for pellet count data dbExecute(sg_db, &quot;CREATE TABLE pellet_count_raw ( obs_id PRIMARY KEY NOT NULL, global_id, pellet_type varchar (15), pellet_age varchar (8), pellet_dist varchar (5), dist_to_edge varchar (5), transect_dist varchar (5), hab_type varchar (20) );&quot;) #Bring in pellets data pellet_count_raw &lt;- read.csv(&quot;../Data/raw_data/pellet_raw.csv&quot;) dbWriteTable (sg_db, &quot;pellet_count_raw&quot;, pellet_count_raw, append = TRUE) This is what the the contents of the table looks like #check data dbGetQuery (sg_db, &quot;SELECT * FROM pellet_count_raw LIMIT 10;&quot;) ## obs_id global_id pellet_type pellet_age ## 1 1 2eb62165-bf94-47b2-a63a-af0776b4f48f Pellet Cluster Old ## 2 2 2eb62165-bf94-47b2-a63a-af0776b4f48f Pellet Cluster Old ## 3 3 ff0ed995-d726-43d9-b314-b4e4e07329b1 Pellet Cluster Moderate ## 4 4 ff0ed995-d726-43d9-b314-b4e4e07329b1 Pellet Cluster Moderate ## 5 5 ff0ed995-d726-43d9-b314-b4e4e07329b1 Pellet Cluster Old ## 6 6 ff0ed995-d726-43d9-b314-b4e4e07329b1 Pellet Cluster Moderate ## 7 7 ff0ed995-d726-43d9-b314-b4e4e07329b1 Pellet Cluster Very Old ## 8 8 ff0ed995-d726-43d9-b314-b4e4e07329b1 Single Pellet Old ## 9 9 ff0ed995-d726-43d9-b314-b4e4e07329b1 Single Pellet Moderate ## 10 10 9c68a1ac-1c8b-4bb0-aba4-dfbe45da26c4 ## pellet_dist dist_to_edge transect_dist hab_type ## 1 143.5 55.0 385.0 Low Sagebrush ## 2 133.0 195.0 439.0 Low Sagebrush ## 3 302.0 10.0 84.0 Perennial Grass ## 4 75.0 38.0 112.0 Bare Ground ## 5 35.0 37.0 123.0 Bare Ground ## 6 87.0 47.0 148.0 Bare Ground ## 7 99.0 52.0 163.0 Perennial Grass ## 8 72.0 25.0 206.0 Bare Ground ## 9 84.0 48.0 425.0 Low Sagebrush ## 10 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; 1.5 Dog Plot Data This is the code where I created the dog plot table and inserted the data into the table. #Bring in dog data dbExecute(sg_db, &quot;CREATE TABLE dog_transect_raw ( obs_id PRIMARY KEY, plot_id varchar (5), obs varchar (10), n varchar (2), dist varchar (5) );&quot;) dog_raw &lt;- read.csv(&quot;../Data/raw_data/dog_raw.csv&quot;) dbWriteTable(sg_db, &quot;dog_transect_raw&quot;, dog_raw, append = TRUE) This is what the data looks like. #check data dbGetQuery (sg_db, &quot;SELECT * FROM dog_transect_raw LIMIT 10;&quot;) ## obs_id plot_id obs n dist ## 1 1 UTB1 Gray Partridge 1 50.0 ## 2 2 UTC3 Adult Female Sage-Grouse 1 15.0 ## 3 3 UTC3 Sage-Grouse Chicks 3 15.0 ## 4 4 UTC4 Adult Male Sage-grouse 9 92.0 ## 5 5 UTC6 Adult Female Sage-Grouse 1 32.5 ## 6 6 UTC6 Adult Female Sage-Grouse 1 71.5 ## 7 7 UTC6 Sage-Grouse Chicks 5 32.5 ## 8 8 UTC6 Sage-Grouse Chicks 7 71.5 ## 9 9 UTC6 Gray Partridge 30 67.5 ## 10 10 UTC6 Gray Partridge 15 4.0 1.6 Combining pellet count data with plot data Because I am using nested data entry methods using Survey123, the data comes to me in two separate data sheets. One sheet contains the information about the plot, the other sheet is all the pellet count observations. It links the two through a “global_id”. I need to combine the two sheets to where each pellet observation also has the plot information. I am combining those below. dbExecute(sg_db, &quot;CREATE TABLE pellet_count ( observation INTEGER PRIMARY KEY, global_id, plot_id varchar(5), type char(1), elevation char (4), fire_year char(4), pellet_type, pellet_age, pellet_dist, dist_to_edge, transect_dist, hab_type, FOREIGN KEY (global_id) REFERENCES sg_fire_plots(global_id) FOREIGN KEY (global_id) REFERENCES pellet_count_raw(global_id) );&quot;) dbExecute(sg_db, &quot;INSERT INTO pellet_count ( global_id, plot_id, type, elevation, fire_year,pellet_type, pellet_age, pellet_dist,dist_to_edge, transect_dist, hab_type) SELECT sg_fire_plots.global_id, sg_fire_plots.plot_id, sg_fire_plots.type, sg_fire_plots.elevation, sg_fire_plots.fire_year, pellet_count_raw.pellet_type, pellet_count_raw.pellet_age, pellet_count_raw.pellet_dist, pellet_count_raw.dist_to_edge, pellet_count_raw.transect_dist, pellet_count_raw.hab_type FROM sg_fire_plots LEFT JOIN pellet_count_raw USING (global_id) WHERE sg_fire_plots.global_id = pellet_count_raw.global_id ;&quot;) dbGetQuery (sg_db, &quot;SELECT * FROM pellet_count LIMIT 10;&quot;) This is what the final pellet count table looks like. #check data dbGetQuery (sg_db, &quot;SELECT * FROM pellet_count LIMIT 10;&quot;) ## observation global_id plot_id type elevation ## 1 1 4b02d159-ae20-4bc8-9e82-21bb905ec574 IDB7 B 6300 ## 2 2 4b02d159-ae20-4bc8-9e82-21bb905ec574 IDB7 B 6300 ## 3 3 4b02d159-ae20-4bc8-9e82-21bb905ec574 IDB7 B 6300 ## 4 4 abeaa1a3-19c8-41a3-a784-127d99357ca3 IDB8 B 6720 ## 5 5 abeaa1a3-19c8-41a3-a784-127d99357ca3 IDB8 B 6720 ## 6 6 5d833d59-8706-4889-b490-b4b120edc76e IDC8 R 6520 ## 7 7 5d833d59-8706-4889-b490-b4b120edc76e IDC8 R 6520 ## 8 8 5d833d59-8706-4889-b490-b4b120edc76e IDC8 R 6520 ## 9 9 5d833d59-8706-4889-b490-b4b120edc76e IDC8 R 6520 ## 10 10 5d833d59-8706-4889-b490-b4b120edc76e IDC8 R 6520 ## fire_year pellet_type pellet_age pellet_dist dist_to_edge transect_dist ## 1 1981 Pellet Cluster Very Old 112.0 79.0 250.0 ## 2 1981 Pellet Cluster Very Old 117.0 60.0 326.0 ## 3 1981 Pellet Cluster Very Old 83.0 75.0 261.0 ## 4 2012 Pellet Cluster Old 54.0 676.0 174.0 ## 5 2012 Pellet Cluster Old 67.0 675.0 142.0 ## 6 &lt;NA&gt; Pellet Cluster Moderate 123.0 153.0 397.0 ## 7 &lt;NA&gt; Pellet Cluster Very Old 144.0 158.0 395.0 ## 8 &lt;NA&gt; Pellet Cluster Very Old 288.0 234.0 328.0 ## 9 &lt;NA&gt; Single Pellet Very Old 128.0 232.0 333.0 ## 10 &lt;NA&gt; Single Pellet Very Old 163.0 37.0 497.0 ## hab_type ## 1 Low Sagebrush ## 2 Low Sagebrush ## 3 Low Sagebrush ## 4 Perennial Grass ## 5 Perennial Grass ## 6 Low Sagebrush ## 7 Low Sagebrush ## 8 Low Sagebrush ## 9 Low Sagebrush ## 10 Low Sagebrush 1.7 Combining dog transect data with plot data. The same steps need to be done with my pointing dog transect data. dbExecute(sg_db, &quot;CREATE TABLE dog_transect ( observation INTEGER PRIMARY KEY, plot_id varchar(5), type, fire_year, elevation, obs, n, dist, FOREIGN KEY (plot_id) REFERENCES sg_fire_plots (plot_id) FOREIGN KEY (plot_id) REFERENCES dog_transect_raw (plot_id) );&quot;) dbExecute(sg_db, &quot;INSERT INTO dog_transect ( plot_id, type, fire_year, elevation, obs, n, dist) SELECT sg_fire_plots.plot_id, sg_fire_plots.type, sg_fire_plots.fire_year, sg_fire_plots.elevation, dog_transect_raw.obs, dog_transect_raw.n, dog_transect_raw.dist FROM sg_fire_plots RIGHT JOIN dog_transect_raw USING (plot_id) WHERE sg_fire_plots.plot_id = dog_transect_raw.plot_id ;&quot;) This is what the final data sheet looks like. #check data dbGetQuery (sg_db, &quot;SELECT * FROM dog_transect LIMIT 10;&quot;) ## observation plot_id type fire_year elevation obs n ## 1 1 IDB5 B 1999 6200 Adult Female Sage-Grouse 4 ## 2 2 IDB5 B 1999 6200 Adult Male Sage-grouse 5 ## 3 3 IDB5 B 1999 6200 Adult Male Sage-grouse 2 ## 4 4 IDB6 B 1999 5600 Gray Partridge 6 ## 5 5 IDC7 R &lt;NA&gt; 6500 Adult Female Sage-Grouse 6 ## 6 6 IDC7 R &lt;NA&gt; 6500 Adult Female Sage-Grouse 20 ## 7 7 IDC7 R &lt;NA&gt; 6500 Adult Male Sage-grouse 2 ## 8 8 IDC7 R &lt;NA&gt; 6500 Adult Male Sage-grouse 9 ## 9 9 IDC8 R &lt;NA&gt; 6520 Adult Male Sage-grouse 2 ## 10 10 IDB9 B 2012 6720 Adult Female Sage-Grouse 13 ## dist ## 1 24.9 ## 2 24.9 ## 3 117.8 ## 4 15.8 ## 5 37.0 ## 6 24.8 ## 7 37.0 ## 8 24.8 ## 9 46.3 ## 10 103.8 "],["data-wrangling-and-visualization-of-dog-transects.html", "Chapter 2 Data Wrangling and Visualization of Dog Transects 2.1 Dog Transect Detections 2.2 Detection Distance 2.3 Detections by Fire Year 2.4 Detections of sage-grouse by elevation", " Chapter 2 Data Wrangling and Visualization of Dog Transects In this chapter, I am going to wrangle and visualize my dog transect data. First I need to load the tidyverse, patchwork, and viridis packages for data wrangling and visualization. #load packages library(tidyverse) library(patchwork) library(viridis) Reminder of the tables we made in chapter 1. ## [1] &quot;dog_transect&quot; &quot;dog_transect_raw&quot; &quot;pellet_count&quot; &quot;pellet_count_raw&quot; ## [5] &quot;sg_fire_plots&quot; 2.1 Dog Transect Detections I am going to start by plotting out the number of sage-grouse, chukar, and gray partridge we detected in burned and reference plots. dog_transects &lt;- dbGetQuery(sg_db, &quot;SELECT * FROM dog_transect;&quot;) dog_transects %&gt;% mutate(obs = factor(obs, levels = c(&quot;Sage-Grouse Chicks&quot;, &quot;Adult Female Sage-Grouse&quot;, &quot;Adult Male Sage-grouse&quot;, &quot;Gray Partridge&quot;, &quot;Chukar&quot;))) %&gt;% group_by(obs, type) %&gt;% mutate(n = as.numeric(n)) %&gt;% summarize(nsum = sum(n)) %&gt;% as_tibble() %&gt;% ggplot(aes(x = type, geom_text(3.00))) + geom_bar(aes(y=nsum, fill = type), stat = &quot;identity&quot;) + facet_wrap(~obs, nrow = 1) + labs(x = &quot;&quot;, y = &quot;# of Detections&quot;, fill = &quot;Plot Type&quot;)+ theme(legend.position = &quot;bottom&quot;) + theme(plot.title = element_text(hjust = 0.5)) + theme(strip.text = element_text( size = 7))+ ggtitle(&quot;Number of detections in burned and reference plots&quot;) 2.2 Detection Distance This is a plot of distance of the detection from the transect line. dog_transects &lt;- dbGetQuery(sg_db, &quot;SELECT * FROM dog_transect;&quot;) dog_transects %&gt;% mutate(dist = as.numeric(dist)) %&gt;% ggplot(aes(x = dist)) + geom_density() + theme(plot.title = element_text(hjust = 0.5)) + ggtitle(&quot;Distance of Detection from Transect&quot;) + labs(x = &quot;Detection Distance (m)&quot;) It looks like our detections peak around 20 m and fall from there. 2.3 Detections by Fire Year Let’s look at detections in burned plots by year burned. dog_transects &lt;- dbGetQuery(sg_db, &quot;SELECT * FROM dog_transect;&quot;) dog_transects %&gt;% mutate(obs = factor(obs, levels = c(&quot;Sage-Grouse Chicks&quot;, &quot;Adult Female Sage-Grouse&quot;, &quot;Adult Male Sage-grouse&quot;, &quot;Gray Partridge&quot;, &quot;Chukar&quot;))) %&gt;% group_by(obs, fire_year) %&gt;% mutate(n = as.numeric(n)) %&gt;% filter(!is.na(fire_year)) %&gt;% summarize(nsum = sum(n)) %&gt;% as_tibble() %&gt;% ggplot(aes(x = fire_year)) + geom_bar(aes(y=nsum, fill = obs), stat = &quot;identity&quot;) + facet_wrap(~obs, nrow = 1) + labs(x = &quot;Fire Year&quot;, y = &quot;# of Detections&quot;, fill = &quot;&quot;)+ theme(legend.position = &quot;bottom&quot;) + theme(plot.title = element_text(hjust = 0.5)) + theme(strip.text = element_text( size = 7))+ ggtitle(&quot;Number of detections in burned and reference plots&quot;) + theme(legend.key.size = unit(.4, &#39;cm&#39;)) No clear pattern is emerging. 2.4 Detections of sage-grouse by elevation Let’s visualize sage-grouse detections by elevation. dog_transects &lt;- dbGetQuery(sg_db, &quot;SELECT * FROM dog_transect;&quot;) dog_transects %&gt;% mutate(obs = factor(obs, levels = c(&quot;Sage-Grouse Chicks&quot;, &quot;Adult Female Sage-Grouse&quot;, &quot;Adult Male Sage-grouse&quot;))) %&gt;% filter(!is.na(obs)) %&gt;% mutate(n = as.numeric(n)) %&gt;% mutate(elevation = as.numeric(elevation)) %&gt;% mutate(elevation = (elevation/3.281)) %&gt;% group_by(type, elevation) %&gt;% summarize(nsum = sum(n)) %&gt;% ggplot(aes(x = elevation)) + geom_bar(aes(y=nsum, fill = type), stat = &quot;identity&quot; ) + facet_wrap(~type)+ theme(plot.title = element_text(hjust = 0.5)) + ggtitle(&quot;Sage-grouse Detections by Elevation&quot;) + labs(x = &quot;Elevation (m)&quot;, y = &quot;# of detections&quot;, fill = &quot;Plot Type&quot;) No clear pattern is emerging. "],["data-wrangling-and-visualization-of-pellet-transects.html", "Chapter 3 Data Wrangling and Visualization of Pellet Transects 3.1 Pellets detected by plot type 3.2 Pellets Detected by Habitat Type 3.3 Pellet Age 3.4 Pellet Distance", " Chapter 3 Data Wrangling and Visualization of Pellet Transects This chapter looks at wrangling and visualizing all of the pellet transect data. 3.1 Pellets detected by plot type Let’s look at the number of pellets detected in burned and reference plots. pellet_count &lt;- dbGetQuery(sg_db, &quot;SELECT * FROM pellet_count;&quot;) pellet_count %&gt;% group_by(type) %&gt;% count() %&gt;% as_tibble() %&gt;% ggplot(aes(x = type)) + geom_bar(aes(y=n, fill = type), stat = &quot;identity&quot;) + labs(x = &quot;&quot;, y = &quot;# of Detections&quot;, fill = &quot;Plot Type&quot;)+ theme(legend.position = &quot;bottom&quot;) + theme(plot.title = element_text(hjust = 0.5)) + ggtitle(&quot;Number of pellet detections in burned and reference plots&quot;) It looks like we detected more sage-grouse pellets in reference plots when compared to burned plots. 3.2 Pellets Detected by Habitat Type Let’s look at what habitat type pellets were detected within burned and reference plots. pellet_count &lt;- dbGetQuery(sg_db, &quot;SELECT * FROM pellet_count;&quot;) pellet_count %&gt;% group_by(hab_type,type) %&gt;% count() %&gt;% filter(!all(hab_type == &quot;&quot;)) %&gt;% as_tibble() %&gt;% ggplot(aes(x = type)) + geom_bar(aes(y=n, fill = type), stat = &quot;identity&quot;) + facet_wrap(~hab_type)+ labs(x = &quot;Plot Type&quot;, y = &quot;# of Detections&quot;, fill = &quot;Plot Type&quot;)+ theme(legend.position = &quot;bottom&quot;) + theme(plot.title = element_text(hjust = 0.5)) + ggtitle(&quot;Number of pellet detected by habitat type&quot;) It looks like most of the pellets were detected in low and black sage-brush. This could be because it’s easier to detect pellets within these habitat types, or because sage-grouse use these areas more. 3.3 Pellet Age Let’s look at pellet age in burned and unburned plots pellet_count &lt;- dbGetQuery(sg_db, &quot;SELECT * FROM pellet_count;&quot;) pellet_count %&gt;% group_by(pellet_age,type) %&gt;% count() %&gt;% filter(!all(pellet_age == &quot;&quot;)) %&gt;% as_tibble() %&gt;% ggplot(aes(x = type)) + geom_bar(aes(y=n, fill = type), stat = &quot;identity&quot;) + facet_wrap(~pellet_age)+ labs(x = &quot;Plot Type&quot;, y = &quot;# of Detections&quot;, fill = &quot;Pellet Age&quot;)+ theme(legend.position = &quot;bottom&quot;) + theme(plot.title = element_text(hjust = 0.5)) + ggtitle(&quot;Age of Pellets&quot;) It looks like the age of the pellets stays similar across burned and reference plots, with old and very old pellets being detected the most. 3.4 Pellet Distance Let’s plot out pellet distance from transect line to look at approximately how far pellets are being detected. pellet_count &lt;- dbGetQuery(sg_db, &quot;SELECT * FROM pellet_count;&quot;) pellet_count %&gt;% filter(!all(pellet_dist == &quot;&quot;)) %&gt;% filter(!is.na(pellet_dist)) %&gt;% mutate(pellet_dist = as.numeric(pellet_dist)) %&gt;% mutate(pellet_dist = pellet_dist*2.4) %&gt;% ggplot(aes(x = pellet_dist)) + geom_density() + theme(plot.title = element_text(hjust = 0.5)) + ggtitle(&quot;Distance of Pellet Detected&quot;) + labs(x = &quot;Detection Distance (cm)&quot;) Looks like most of our pellets are detected at distances less than 3 meters. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
