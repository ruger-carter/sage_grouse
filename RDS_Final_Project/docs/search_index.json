[["index.html", "Greater Sage-grouse and Wildfire Chapter 1 Creating the Sage-grouse Fire Database 1.1 Database Diagram 1.2 Creating the database 1.3 Creating the sage-grouse fire plot data 1.4 Pellet Count Data 1.5 Dog Plot Data 1.6 Combining pellet count data with plot data 1.7 Combining dog transect data with plot data.", " Greater Sage-grouse and Wildfire Ruger Carter 2023-04-25 Chapter 1 Creating the Sage-grouse Fire Database 1.1 Database Diagram This is a diagram of my data. Primary keys are italicized. Foreign keys are shown in bold. sg_fire_plots table contains the data for individual plots. The pellet_count_raw table includes data recorded during pellet count surveys. The dog_transect_raw table includes data recorded during pointing dog surveys. 1.2 Creating the database This is the code I used to create the database. We’ll start with loading the DBI and `RSQLite Packages. library(DBI) library(RSQLite) First, we’re going to start by establishing a connection to a SQLite database. sg_db &lt;- dbConnect(RSQLite::SQLite(), &quot;sg.db&quot;) 1.3 Creating the sage-grouse fire plot data This table includes all plot data that we sampled using pointing dogs and pellet counts. #create sg_fire_plot table dbExecute(sg_db, &quot;CREATE TABLE sg_fire_plots ( global_id, plot_id varchar(5) NOT NULL, state varchar(2) CHECK (state IN (&#39;Idaho&#39;, &#39;Utah&#39;)), date, type char (1) CHECK (type IN (&#39;B&#39;,&#39;C&#39;)), elevation char (4), fire_year char (4), surveyor, PRIMARY KEY (plot_id) );&quot;) sg_fire_plots &lt;- read.csv(&quot;Data/raw_data/sg_fire_plots.csv&quot;) names(sg_fire_plots) #Enter data from CSV into table dbWriteTable(sg_db, &quot;sg_fire_plots&quot;, sg_fire_plots, append = TRUE) This is what the content of the table looks like: #check data dbGetQuery(sg_db, &quot;SELECT * FROM sg_fire_plots LIMIT 10;&quot;) ## global_id plot_id state date type ## 1 f8c4c2e7-0943-4cea-a943-90f858db695a IDB1 Idaho 9/6/2022 15:49 B ## 2 9161b0ae-60b1-44e1-af24-52ae23a6ad3a IDC1 Idaho 9/7/2022 16:56 C ## 3 7b0bc762-0d47-403f-8b90-359ba21a6b51 IDB2 Idaho 9/6/2022 14:56 B ## 4 54cb649e-5254-4ec4-9858-5817a66b5af5 IDC2 Idaho 9/7/2022 16:56 C ## 5 08359285-da58-402c-8c83-6cad69cdb2c3 IDB3 Idaho 9/6/2022 14:58 B ## 6 78e4bf48-5004-44c4-ac85-a687f62decbc IDC3 Idaho 9/7/2022 16:55 C ## 7 1ecb8c44-3e56-4434-bac1-f42f33f6c9e2 IDB4 Idaho 9/21/2022 19:19 B ## 8 5cc1a76e-4c04-4a00-a3c6-b9b88bf69120 IDB5 Idaho 9/21/2022 19:19 B ## 9 5f52bc01-463b-4b1e-814d-e12c3362c911 IDB6 Idaho 9/21/2022 19:19 B ## 10 4b02d159-ae20-4bc8-9e82-21bb905ec574 IDB7 Idaho 10/5/2022 21:08 B ## elevation fire_year surveyor ## 1 6200 2010 Austin Heitzman ## 2 6200 &lt;NA&gt; Austin Heitzman ## 3 5900 1999 Austin Heitzman ## 4 5900 &lt;NA&gt; Austin Heitzman ## 5 6000 1999 Austin Heitzman ## 6 6000 &lt;NA&gt; Austin Heitzman ## 7 5700 1999 Austin Heitzman ## 8 6200 1999 Austin Heitzman ## 9 5600 1999 Austin Heitzman ## 10 6300 1981 Austin Heitzman 1.4 Pellet Count Data This table includes all the pellet count data collected on the plots. #Create table for pellet count data dbExecute(sg_db, &quot;CREATE TABLE pellet_count_raw ( obs_id PRIMARY KEY NOT NULL, global_id, pellet_type varchar (15), pellet_age varchar (8), pellet_dist varchar (5), dist_to_edge varchar (5), transect_dist varchar (5), hab_type varchar (20) );&quot;) #Bring in pellets data pellet_count_raw &lt;- read.csv(&quot;Data/raw_data/pellet_raw.csv&quot;) dbWriteTable (sg_db, &quot;pellet_count_raw&quot;, pellet_count_raw, append = TRUE) This is what the the contents of the table looks like #check data dbGetQuery (sg_db, &quot;SELECT * FROM pellet_count_raw LIMIT 10;&quot;) ## obs_id global_id pellet_type pellet_age ## 1 1 2eb62165-bf94-47b2-a63a-af0776b4f48f Pellet Cluster Old ## 2 2 2eb62165-bf94-47b2-a63a-af0776b4f48f Pellet Cluster Old ## 3 3 ff0ed995-d726-43d9-b314-b4e4e07329b1 Pellet Cluster Moderate ## 4 4 ff0ed995-d726-43d9-b314-b4e4e07329b1 Pellet Cluster Moderate ## 5 5 ff0ed995-d726-43d9-b314-b4e4e07329b1 Pellet Cluster Old ## 6 6 ff0ed995-d726-43d9-b314-b4e4e07329b1 Pellet Cluster Moderate ## 7 7 ff0ed995-d726-43d9-b314-b4e4e07329b1 Pellet Cluster Very Old ## 8 8 ff0ed995-d726-43d9-b314-b4e4e07329b1 Single Pellet Old ## 9 9 ff0ed995-d726-43d9-b314-b4e4e07329b1 Single Pellet Moderate ## 10 10 9c68a1ac-1c8b-4bb0-aba4-dfbe45da26c4 ## pellet_dist dist_to_edge transect_dist hab_type ## 1 143.5 55.0 385.0 Low Sagebrush ## 2 133.0 195.0 439.0 Low Sagebrush ## 3 302.0 10.0 84.0 Perennial Grass ## 4 75.0 38.0 112.0 Bare Ground ## 5 35.0 37.0 123.0 Bare Ground ## 6 87.0 47.0 148.0 Bare Ground ## 7 99.0 52.0 163.0 Perennial Grass ## 8 72.0 25.0 206.0 Bare Ground ## 9 84.0 48.0 425.0 Low Sagebrush ## 10 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; 1.5 Dog Plot Data This is the code where I created the dog plot table and inserted the data into the table. #Bring in dog data dbExecute(sg_db, &quot;CREATE TABLE dog_transect_raw ( obs_id PRIMARY KEY, plot_id varchar (5), hens varchar (2), chicks varchar (2), males varchar (2), chukar varchar (2), gray_part varchar (2), distance varchar(5) );&quot;) dog_raw &lt;- read.csv(&quot;data/raw_data/dog_raw.csv&quot;) dbWriteTable(sg_db, &quot;dog_transect_raw&quot;, dog_raw, append = TRUE) This is what the data looks like. #check data dbGetQuery (sg_db, &quot;SELECT * FROM dog_transect_raw LIMIT 10;&quot;) ## obs_id plot_id hens chicks males chukar gray_part distance ## 1 1 UTC1 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 2 2 UTB1 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; 1 50.0 ## 3 3 UTC2 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 4 4 UTB2 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 5 5 UTC3 1 3 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 6 6 UTB3 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 7 7 UTC4 &lt;NA&gt; &lt;NA&gt; 9 &lt;NA&gt; &lt;NA&gt; 92.0 ## 8 8 UTB4 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 9 9 UTC5 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 10 10 UTB5 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; 1.6 Combining pellet count data with plot data Because I am using nested data entry methods using Survey123, the data comes to me in two separate data sheets. One sheet contains the information about the plot, the other sheet is all the pellet count observations. It links the two through a “global_id”. I need to combine the two sheets to where each pellet observation also has the plot information. I am combining those below. #Combine pellet counts with plot data dbExecute(sg_db, &quot;CREATE TABLE pellet_count ( observation INTEGER PRIMARY KEY, global_id, plot_id varchar(5), type char(1), elevation char (4), fire_year char(4), pellet_type, pellet_age, pellet_dist, dist_to_edge, transect_dist, hab_type, FOREIGN KEY (global_id) REFERENCES sg_fire_plots(global_id) FOREIGN KEY (global_id) REFERENCES pellet_count_raw(global_id) );&quot;) dbExecute(sg_db, &quot;INSERT INTO pellet_count ( global_id, plot_id, type, elevation, fire_year,pellet_type, pellet_age, pellet_dist,dist_to_edge, transect_dist, hab_type) SELECT sg_fire_plots.global_id, sg_fire_plots.plot_id, sg_fire_plots.type, sg_fire_plots.elevation, sg_fire_plots.fire_year, pellet_count_raw.pellet_type, pellet_count_raw.pellet_age, pellet_count_raw.pellet_dist, pellet_count_raw.dist_to_edge, pellet_count_raw.transect_dist, pellet_count_raw.hab_type FROM sg_fire_plots LEFT JOIN pellet_count_raw USING (global_id) WHERE sg_fire_plots.global_id = pellet_count_raw.global_id ;&quot;) This is what the final data sheet looks like. #check data dbGetQuery (sg_db, &quot;SELECT * FROM pellet_count LIMIT 10;&quot;) ## observation global_id plot_id type elevation ## 1 1 4b02d159-ae20-4bc8-9e82-21bb905ec574 IDB7 B 6300 ## 2 2 4b02d159-ae20-4bc8-9e82-21bb905ec574 IDB7 B 6300 ## 3 3 4b02d159-ae20-4bc8-9e82-21bb905ec574 IDB7 B 6300 ## 4 4 abeaa1a3-19c8-41a3-a784-127d99357ca3 IDB8 B 6720 ## 5 5 abeaa1a3-19c8-41a3-a784-127d99357ca3 IDB8 B 6720 ## 6 6 5d833d59-8706-4889-b490-b4b120edc76e IDC8 C 6520 ## 7 7 5d833d59-8706-4889-b490-b4b120edc76e IDC8 C 6520 ## 8 8 5d833d59-8706-4889-b490-b4b120edc76e IDC8 C 6520 ## 9 9 5d833d59-8706-4889-b490-b4b120edc76e IDC8 C 6520 ## 10 10 5d833d59-8706-4889-b490-b4b120edc76e IDC8 C 6520 ## fire_year pellet_type pellet_age pellet_dist dist_to_edge transect_dist ## 1 1981 Pellet Cluster Very Old 112.0 79.0 250.0 ## 2 1981 Pellet Cluster Very Old 117.0 60.0 326.0 ## 3 1981 Pellet Cluster Very Old 83.0 75.0 261.0 ## 4 2012 Pellet Cluster Old 54.0 676.0 174.0 ## 5 2012 Pellet Cluster Old 67.0 675.0 142.0 ## 6 &lt;NA&gt; Pellet Cluster Moderate 123.0 153.0 397.0 ## 7 &lt;NA&gt; Pellet Cluster Very Old 144.0 158.0 395.0 ## 8 &lt;NA&gt; Pellet Cluster Very Old 288.0 234.0 328.0 ## 9 &lt;NA&gt; Single Pellet Very Old 128.0 232.0 333.0 ## 10 &lt;NA&gt; Single Pellet Very Old 163.0 37.0 497.0 ## hab_type ## 1 Low Sagebrush ## 2 Low Sagebrush ## 3 Low Sagebrush ## 4 Perennial Grass ## 5 Perennial Grass ## 6 Low Sagebrush ## 7 Low Sagebrush ## 8 Low Sagebrush ## 9 Low Sagebrush ## 10 Low Sagebrush 1.7 Combining dog transect data with plot data. The same steps need to be done with my pointing dog transect data. #Combine pointing dog data with plot data. dbExecute(sg_db, &quot;CREATE TABLE dog_transect ( observation INTEGER PRIMARY KEY, plot_id varchar(5), type, fire_year, elevation, hens, chicks, males, chukar, gray_part, distance, FOREIGN KEY (plot_id) REFERENCES sg_fire_plots (plot_id) FOREIGN KEY (plot_id) REFERENCES dog_transect_raw (plot_id) );&quot;) dbExecute(sg_db, &quot;INSERT INTO dog_transect ( plot_id, type, fire_year, elevation, hens, chicks, males, chukar, gray_part, distance) SELECT sg_fire_plots.plot_id, sg_fire_plots.type, sg_fire_plots.fire_year, sg_fire_plots.elevation, dog_transect_raw.hens, dog_transect_raw.chicks, dog_transect_raw.males, dog_transect_raw.chukar, dog_transect_raw.gray_part, dog_transect_raw.distance FROM sg_fire_plots LEFT JOIN dog_transect_raw USING (plot_id) WHERE sg_fire_plots.plot_id = dog_transect_raw.plot_id ;&quot;) This is what the final data sheet looks like. #check data dbGetQuery (sg_db, &quot;SELECT * FROM dog_transect LIMIT 10;&quot;) ## observation plot_id type fire_year elevation hens chicks males chukar ## 1 1 UTC1 C &lt;NA&gt; 6200 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## 2 2 UTB1 B 1999 6200 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## 3 3 UTC2 C &lt;NA&gt; 6400 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## 4 4 UTB2 B 1999 6300 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## 5 5 UTC3 C &lt;NA&gt; 6200 1 3 &lt;NA&gt; NA ## 6 6 UTB3 B 1999 6080 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## 7 7 UTC4 C &lt;NA&gt; 6200 &lt;NA&gt; &lt;NA&gt; 9 NA ## 8 8 UTB4 B 1999 6200 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## 9 9 UTC5 C &lt;NA&gt; 6600 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## 10 10 UTB5 B 1999 6200 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; NA ## gray_part distance ## 1 &lt;NA&gt; &lt;NA&gt; ## 2 1 50.0 ## 3 &lt;NA&gt; &lt;NA&gt; ## 4 &lt;NA&gt; &lt;NA&gt; ## 5 &lt;NA&gt; &lt;NA&gt; ## 6 &lt;NA&gt; &lt;NA&gt; ## 7 &lt;NA&gt; 92.0 ## 8 &lt;NA&gt; &lt;NA&gt; ## 9 &lt;NA&gt; &lt;NA&gt; ## 10 &lt;NA&gt; &lt;NA&gt; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
